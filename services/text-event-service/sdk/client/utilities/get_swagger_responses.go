// Code generated by go-swagger; DO NOT EDIT.

package utilities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetSwaggerReader is a Reader for the GetSwagger structure.
type GetSwaggerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSwaggerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSwaggerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSwaggerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSwaggerOK creates a GetSwaggerOK with default headers values
func NewGetSwaggerOK() *GetSwaggerOK {
	return &GetSwaggerOK{}
}

/*GetSwaggerOK handles this case with default header values.

Response with a YAML swagger configuration file in body
*/
type GetSwaggerOK struct {
}

func (o *GetSwaggerOK) Error() string {
	return fmt.Sprintf("[GET /resources/swagger.yaml][%d] getSwaggerOK ", 200)
}

func (o *GetSwaggerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSwaggerNotFound creates a GetSwaggerNotFound with default headers values
func NewGetSwaggerNotFound() *GetSwaggerNotFound {
	return &GetSwaggerNotFound{}
}

/*GetSwaggerNotFound handles this case with default header values.

Error with no specific content returned when no swagger.yaml is found
*/
type GetSwaggerNotFound struct {
}

func (o *GetSwaggerNotFound) Error() string {
	return fmt.Sprintf("[GET /resources/swagger.yaml][%d] getSwaggerNotFound ", 404)
}

func (o *GetSwaggerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
