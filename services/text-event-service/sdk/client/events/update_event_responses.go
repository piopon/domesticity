// Code generated by go-swagger; DO NOT EDIT.

package events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/piopon/domesticity/services/text-event-service/sdk/models"
)

// UpdateEventReader is a Reader for the UpdateEvent structure.
type UpdateEventReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateEventReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateEventOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateEventBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateEventUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateEventInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateEventOK creates a UpdateEventOK with default headers values
func NewUpdateEventOK() *UpdateEventOK {
	return &UpdateEventOK{}
}

/*UpdateEventOK handles this case with default header values.

Response with currently updated event stored in DB (selected by ID parameter in path param)
*/
type UpdateEventOK struct {
	Payload *models.Event
}

func (o *UpdateEventOK) Error() string {
	return fmt.Sprintf("[PUT /events/{id}][%d] updateEventOK  %+v", 200, o.Payload)
}

func (o *UpdateEventOK) GetPayload() *models.Event {
	return o.Payload
}

func (o *UpdateEventOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Event)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEventBadRequest creates a UpdateEventBadRequest with default headers values
func NewUpdateEventBadRequest() *UpdateEventBadRequest {
	return &UpdateEventBadRequest{}
}

/*UpdateEventBadRequest handles this case with default header values.

Error with JSON message returned in body when bad request was invoked
*/
type UpdateEventBadRequest struct {
	Payload *models.GenericError
}

func (o *UpdateEventBadRequest) Error() string {
	return fmt.Sprintf("[PUT /events/{id}][%d] updateEventBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateEventBadRequest) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *UpdateEventBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEventUnprocessableEntity creates a UpdateEventUnprocessableEntity with default headers values
func NewUpdateEventUnprocessableEntity() *UpdateEventUnprocessableEntity {
	return &UpdateEventUnprocessableEntity{}
}

/*UpdateEventUnprocessableEntity handles this case with default header values.

Error with JSON messages returned in body when validation error occurs
*/
type UpdateEventUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *UpdateEventUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /events/{id}][%d] updateEventUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateEventUnprocessableEntity) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *UpdateEventUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEventInternalServerError creates a UpdateEventInternalServerError with default headers values
func NewUpdateEventInternalServerError() *UpdateEventInternalServerError {
	return &UpdateEventInternalServerError{}
}

/*UpdateEventInternalServerError handles this case with default header values.

Error with JSON message returned in body when internal server error occurs
*/
type UpdateEventInternalServerError struct {
	Payload *models.GenericError
}

func (o *UpdateEventInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /events/{id}][%d] updateEventInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateEventInternalServerError) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *UpdateEventInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
