// Code generated by go-swagger; DO NOT EDIT.

package events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/piopon/domesticity/services/text-event-service/sdk/models"
)

// DeleteEventReader is a Reader for the DeleteEvent structure.
type DeleteEventReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteEventReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteEventNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteEventBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteEventNoContent creates a DeleteEventNoContent with default headers values
func NewDeleteEventNoContent() *DeleteEventNoContent {
	return &DeleteEventNoContent{}
}

/*DeleteEventNoContent handles this case with default header values.

Response with no specific content in body (status indicates success)
*/
type DeleteEventNoContent struct {
}

func (o *DeleteEventNoContent) Error() string {
	return fmt.Sprintf("[DELETE /events/{id}][%d] deleteEventNoContent ", 204)
}

func (o *DeleteEventNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEventBadRequest creates a DeleteEventBadRequest with default headers values
func NewDeleteEventBadRequest() *DeleteEventBadRequest {
	return &DeleteEventBadRequest{}
}

/*DeleteEventBadRequest handles this case with default header values.

Error with JSON message returned in body when bad request was invoked
*/
type DeleteEventBadRequest struct {
	Payload *models.GenericError
}

func (o *DeleteEventBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /events/{id}][%d] deleteEventBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteEventBadRequest) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *DeleteEventBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
